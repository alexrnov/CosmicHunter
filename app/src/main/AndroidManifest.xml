<?xml version="1.0" encoding="utf-8"?>
<!-- xmlns:tools add tools namespace. When build app, the build tools remove
these attributes so there is no effect on your APK size or runtime behavior -->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="alexrnov.cosmichunter"> <!-- permit declare short name without full packet path as: android:name = ".ClassName"-->
    <!-- filters: -->
    <!-- supports-screens - lets you specify the screen sizes your application supports. It's important that you always use this
    element in your application to specify the screen sizes your application supports. normalScreen - this is an HVGA (480 x 320 or 640x240). -->
    <!-- requiresSmallestWidthDp="320" - Specifies the minimum smallestWidth required. The smallestWidth is the shortest dimension of the
    screen space (in dp units) that must be available to your application UIâ€”that is, the shortest of the available screen's two dimensions.
    Usually, the value you supply for this is the "smallest width" that your layout supports, regardless of the screen's current orientation.
    A typical handset screen has a smallestWidth of 320dp. Value 320 is declared here to not support the screen - 640 x 240 -->
    <supports-screens android:smallScreens="true"
        android:normalScreens="true"
        android:largeScreens="true"
        android:xlargeScreens="true"
        android:requiresSmallestWidthDp="320"/>

    <!--instead that declare, sdk options define in gradle script-->
    <!--
    <uses-sdk android:minSdkVersion="14"
        android:targetSdkVersion="28"
        android:maxSdkVersion = "28"
        tools:ignore="GradleOverrides"/>
    -->
    <!-- uses-feature declares a single hardware or software feature that is used by the application. Uses-feature was introduced in API Level 4. Required attribute introduced in API Level 5. -->
    <!-- Tell the system this application requires OpenGL ES 2.0.
    version OpenGL 2.0 is available starting with Android 2.2 (API Level 8), OpenGL 3.0 with Android 4.3 (API Level 18).
    By declaring the OpenGL ES 2.0 API as a requirement in your manifest, you can use that API version as a default,
    check for the availability of the 3.x API at run time and then use OpenGL ES 3.x features if the device supports it.-->
    <uses-feature android:glEsVersion="0x00020000" android:required="true"/>
    <!-- Will be available only on devices that support landscape orientation. -->
    <uses-feature android:name="android.hardware.screen.landscape" android:required="true"/>
    <!-- All apps that don't explicitly require android.hardware.touchscreen will also work on devices with android.hardware.faketouch.-->
    <uses-feature android:name="android.hardware.touchscreen" android:required="false"/>
    <!-- By declaring a feature explicitly and including an android:required="false" attribute, you can effectively disable all filtering on Google Play for the specified feature. -->
    <uses-feature android:name="android.hardware.camera" android:required="false"/>
    <!-- The permissions that you request in <uses-permission> elements can directly affect how Google Play filters your application.
    So that Google Play no filter app by uses-permission, need declare the feature explicitly in a <uses-feature> element and include an android:required="false" attribute -->
    <uses-permission android:name="android.permission.VIBRATE"/>
    <!-- android:allowBackup="true" (default true in Android 6.0 (API 23) and higher, but
    recommend explicitly setting this attribute) -->
    <!-- android:fullBackupContent - This attribute points to an XML file that contains backup rules -->
    <!-- hardwareAccelerated="true" - enable hardware accelerated -->
    <!-- tools:ignore="GoogleAppIndexingWarning" - remove tool tip warning GoogleAppIndexing -->
    <!-- resizeableActivity="false" - disable multi-window display (API Level 24 Android 7.0).
    If app Level 23 or lower then attribute ignore -->
    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        android:name="alexrnov.cosmichunter.Initialization"
        android:hardwareAccelerated="true"
        android:fullBackupContent="@xml/backup_rules"
        android:resizeableActivity="false"
        tools:ignore="GoogleAppIndexingWarning,UnusedAttribute">

        <!-- To run tests that rely on JUnit-based classes, add the necessary <uses-library> elements. -->
        <!-- when required="false" the application can use the library if present, but is designed to function without it if necessary.  The system will allow the application
        to be installed, even if the library is not present. If you use "false", you are responsible for checking at runtime that the library is available.-->
        <uses-library android:name="android.test.runner" android:required="false" />
        <uses-library android:name="android.test.base" android:required="false" />
        <uses-library android:name="android.test.mock" android:required="false" />
        <!-- android:configChanges is used together with screenOrientation="landscape". Also this attribute
        may use when handling multi-window configuration changes yourself, but here multi-window mode is disable -->
        <!-- launchMode specify how the activity should associate with a task. Value
        "singleTask" - The system creates a new task and instantiates the activity at the root
        of the new task. However, if an instance of the activity already exists in a separate task,
        the system routes the intent to the existing instance through a call to its onNewIntent()
        method, rather than creating a new instance. Only one instance of the activity can exist at a time.-->
        <!-- alwaysRetainTaskState - the task retains all activities in its stack even after a long period-->
        <activity
            android:name=".activities.MainActivity"
            android:screenOrientation="landscape"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:launchMode="singleTask"
            android:alwaysRetainTaskState="true">
           <intent-filter>
               <!-- specify that the activity initiates the application -->
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!-- android:parentActivityName add return arrow for up navigation (added in API Level 16 and higher)
        and the system can also use this information to synthesize a back stack of activities with TaskStackBuilder-->
        <!-- for API 4-16 instead parentActivityName is used meta-data with attributes:
        android:name="android.support.PARENT_ACTIVITY" android:value=".MainActivity" -->
        <!-- screenSize attribute used with API level 13 or higher -->
        <activity
            android:name=".activities.GameActivity"
            android:parentActivityName=".activities.MainActivity"
            android:screenOrientation="landscape"
            android:configChanges="orientation|keyboardHidden|screenSize"
            tools:ignore="UnusedAttribute">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".activities.MainActivity" />
        </activity>
        <activity
            android:name=".activities.SettingsActivity"
            android:parentActivityName=".activities.MainActivity"
            android:screenOrientation="landscape"
            android:configChanges="orientation|keyboardHidden|screenSize"
            tools:ignore="UnusedAttribute">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".activities.MainActivity" />
        </activity>
        <activity
            android:name=".activities.LevelsActivity"
            android:parentActivityName=".activities.MainActivity"
            android:screenOrientation="landscape"
            android:configChanges="orientation|keyboardHidden|screenSize"
            tools:ignore="UnusedAttribute">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".activities.MainActivity" />
        </activity>

        <activity android:name=".activities.DialogCancelActivity"
            android:theme="@style/AppTheme.Dialog">
        </activity>

        <activity android:name=".activities.DialogGameOverActivity"
            android:theme="@style/AppTheme.Dialog">
        </activity>

        <activity android:name=".activities.AboutGameActivity"
            android:theme="@style/AppTheme.Dialog"
            android:parentActivityName=".activities.MainActivity"
            android:configChanges="orientation|keyboardHidden|screenSize"
            tools:ignore="UnusedAttribute">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".activities.MainActivity" />
        </activity>
    </application>

</manifest>